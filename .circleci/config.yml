version: 2.1

orbs:
  aws-eks: circleci/aws-eks@2.2.0
  kubernetes: circleci/kubernetes@1.3
  aws-cli: circleci/aws-cli@3.1.1

commands:
  destroy-environment:
    description: Destroy back-end and front-end cloudformation stacks given a workflow ID.
    steps:
      - run:
          name: Destroy environments
          when: on_fail
          command: |
            aws delete cluster --stack-name --region=us-east-2 "eksctl-${CIRCLE_WORKFLOW_ID:0:7}"

jobs:
  test-build:
    docker:
      - image: python:3.7.3-stretch

    steps:
      - checkout
      # run build
      - run:
          name: install dependencies
          command: |
            python3 -m venv .devops
            source .devops/bin/activate
            make install
      # run lint
      - run:
          name: run lint
          command: |
            source .devops/bin/activate
            make lint

  upload-docker:
    docker:
      - image: cimg/go:1.17
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.14
      - run:
          name: Build docker container
          command: |
            docker build --tag=hello-image .
            docker image ls
      - run:
          name: Upload Docker to Dockerhub
          command: |
            dockerpath="mo9348/hello-image"
            docker login --username=mo9348 --password=$DOCKERHUB_PASSWORD
            docker tag "hello-image" "${dockerpath}:${CIRCLE_WORKFLOW_ID:0:7}"
            docker tag "hello-image" "${dockerpath}:latest"
            docker push "${dockerpath}:${CIRCLE_WORKFLOW_ID:0:7}"
            docker push "${dockerpath}:latest"

  deploy:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Install dependancies
          command: |
            curl -o kubectl https://s3.us-west-2.amazonaws.com/amazon-eks/1.22.6/2022-03-09/bin/linux/amd64/kubectl
            install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl

      - run:
          # DevOps is the cluster name
          name: create update EKS cluster
          command: |
            aws eks update-kubeconfig --name DevOps --region us-east-2
             aws eks update-kubeconfig --name eks-DevOps --region us-east-2 --role-arn arn:aws:iam::397309920099:role/EKS-cluster-role
            kubectl config view -o jsonpath='{"Cluster name\tServer\n"}{range .clusters[*]}{.name}{"\t"}{.cluster.server}{"\n"}{end}'
            echo "Deploying to cluster"
            if kubectl get deployment hello-app; then
              echo "Updating deployment to ${CIRCLE_WORKFLOW_ID:0:7}"
              kubectl set image deployment/hello-app hello-app="${dockerpath}:${CIRCLE_WORKFLOW_ID:0:7}"
            else
              echo "Creating deployment"
              kubectl create namespace hello-app
              kubectl apply -f ./kubernetes
            fi

workflows:
  default:
    jobs:
      - test-build
      - upload-docker:
          requires: [test-build]
      - deploy:
          requires: [upload-docker]